{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst blend = (color, blender, factor) => [Math.round(factor * blender[0] + (1.0 - factor) * color[0]), Math.round(factor * blender[1] + (1.0 - factor) * color[1]), Math.round(factor * blender[2] + (1.0 - factor) * color[2])];\n\nconst hexToRGB = hex => [parseInt(hex.slice(1, 3), 16), parseInt(hex.slice(3, 5), 16), parseInt(hex.slice(5, 7), 16)];\n\nconst RGBToHex = rgb => '#' + rgb.map(n => n.toString(16).padStart(2, '0')).join('');\n\nexports.darken = (hex, factor) => RGBToHex(blend(hexToRGB(hex), [0, 0, 0], factor));\n\nexports.lighten = (hex, factor) => RGBToHex(blend(hexToRGB(hex), [255, 255, 255], factor));","map":{"version":3,"sources":["../../src/common/blender.ts"],"names":[],"mappings":";;;;;;AAAA,MAAM,KAAK,GAAG,CAAC,KAAD,EAAkB,OAAlB,EAAqC,MAArC,KAAwD,CACpE,IAAI,CAAC,KAAL,CAAW,MAAM,GAAG,OAAO,CAAC,CAAD,CAAhB,GAAsB,CAAC,MAAM,MAAP,IAAiB,KAAK,CAAC,CAAD,CAAvD,CADoE,EAEpE,IAAI,CAAC,KAAL,CAAW,MAAM,GAAG,OAAO,CAAC,CAAD,CAAhB,GAAsB,CAAC,MAAM,MAAP,IAAiB,KAAK,CAAC,CAAD,CAAvD,CAFoE,EAGpE,IAAI,CAAC,KAAL,CAAW,MAAM,GAAG,OAAO,CAAC,CAAD,CAAhB,GAAsB,CAAC,MAAM,MAAP,IAAiB,KAAK,CAAC,CAAD,CAAvD,CAHoE,CAAtE;;AAMA,MAAM,QAAQ,GAAI,GAAD,IAAiB,CAChC,QAAQ,CAAC,GAAG,CAAC,KAAJ,CAAU,CAAV,EAAa,CAAb,CAAD,EAAkB,EAAlB,CADwB,EAEhC,QAAQ,CAAC,GAAG,CAAC,KAAJ,CAAU,CAAV,EAAa,CAAb,CAAD,EAAkB,EAAlB,CAFwB,EAGhC,QAAQ,CAAC,GAAG,CAAC,KAAJ,CAAU,CAAV,EAAa,CAAb,CAAD,EAAkB,EAAlB,CAHwB,CAAlC;;AAMA,MAAM,QAAQ,GAAI,GAAD,IAAmB,MAAM,GAAG,CAAC,GAAJ,CAAS,CAAD,IAAO,CAAC,CAAC,QAAF,CAAW,EAAX,EAAe,QAAf,CAAwB,CAAxB,EAA2B,GAA3B,CAAf,EAAgD,IAAhD,CAAqD,EAArD,CAA1C;;AAEa,OAAA,CAAA,MAAA,GAAS,CAAC,GAAD,EAAc,MAAd,KAAiC,QAAQ,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAD,CAAT,EAAgB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAhB,EAA2B,MAA3B,CAAN,CAAlD;;AACA,OAAA,CAAA,OAAA,GAAU,CAAC,GAAD,EAAc,MAAd,KAAiC,QAAQ,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAD,CAAT,EAAgB,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CAAhB,EAAiC,MAAjC,CAAN,CAAnD","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst blend = (color, blender, factor) => [\n    Math.round(factor * blender[0] + (1.0 - factor) * color[0]),\n    Math.round(factor * blender[1] + (1.0 - factor) * color[1]),\n    Math.round(factor * blender[2] + (1.0 - factor) * color[2]),\n];\nconst hexToRGB = (hex) => [\n    parseInt(hex.slice(1, 3), 16),\n    parseInt(hex.slice(3, 5), 16),\n    parseInt(hex.slice(5, 7), 16),\n];\nconst RGBToHex = (rgb) => '#' + rgb.map((n) => n.toString(16).padStart(2, '0')).join('');\nexports.darken = (hex, factor) => RGBToHex(blend(hexToRGB(hex), [0, 0, 0], factor));\nexports.lighten = (hex, factor) => RGBToHex(blend(hexToRGB(hex), [255, 255, 255], factor));\n//# sourceMappingURL=blender.js.map"]},"metadata":{},"sourceType":"script"}