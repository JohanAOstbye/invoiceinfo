{"ast":null,"code":"\"use strict\";\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  result[\"default\"] = mod;\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst react_1 = __importStar(require(\"react\"));\n\nconst styled_components_1 = __importDefault(require(\"styled-components\"));\n\nconst colors_1 = require(\"../../common/colors\");\n\nconst Icon_1 = __importDefault(require(\"../icon/Icon\"));\n\nconst ToggleSwitch = ({\n  initialChecked = false,\n  disabled = false,\n  scale = 1,\n  ...props\n}) => {\n  const [id] = react_1.useState('toggle-switch-' + Math.floor(Math.random() * 1000));\n  return react_1.default.createElement(react_1.default.Fragment, null, react_1.default.createElement(Checkbox, Object.assign({\n    id: id,\n    type: \"checkbox\",\n    defaultChecked: initialChecked,\n    disabled: disabled\n  }, props)), react_1.default.createElement(ToggleSwitchContainer, {\n    htmlFor: id,\n    scale: scale,\n    borderScale: 3,\n    slideWidth: 1.6\n  }, react_1.default.createElement(Slider, null, react_1.default.createElement(CheckIcon, {\n    name: \"clear\",\n    className: \"is-not-checked\"\n  }), react_1.default.createElement(CheckIcon, {\n    name: \"check\",\n    className: \"is-checked\"\n  }))));\n};\n\nexports.default = ToggleSwitch;\nconst Checkbox = styled_components_1.default.input`\n  display: none;\n  position: relative;\n\n  &:checked {\n    & + label > div {\n      background: ${colors_1.colors.success};\n      left: calc(100% - 1em);\n    }\n    & + label > div > .is-not-checked {\n      display: none;\n    }\n  }\n\n  &:not(:checked) {\n    & + label > div > .is-checked {\n      display: none;\n    }\n  }\n\n  &:disabled {\n    & + label {\n      background: ${colors_1.colors.grayLighten90};\n      cursor: not-allowed;\n\n      & > div {\n        background: ${colors_1.colors.grayLighten60};\n      }\n    }\n  }\n`;\nconst ToggleSwitchContainer = styled_components_1.default.label`\n  position: relative;\n  display: inline-block;\n  background: #fff;\n  font-size: ${({\n  scale\n}) => scale * 20 + 'px'};\n  width: ${({\n  scale,\n  borderScale,\n  slideWidth\n}) => scale * (20 + borderScale * 4) * slideWidth + 'px'};\n  height: ${({\n  scale,\n  borderScale\n}) => scale * (20 + borderScale * 4) + 'px'};\n  padding: ${({\n  scale,\n  borderScale\n}) => scale * borderScale * 2 + 'px'};\n  box-shadow: inset 0 0 0 ${({\n  scale,\n  borderScale\n}) => scale * borderScale + 'px'} ${colors_1.colors.grayLighten60};\n  border-radius: ${({\n  scale\n}) => scale + 'em'};\n  box-sizing: border-box;\n  cursor: pointer;\n\n  &:focus {\n    outline: none;\n  }\n`;\nconst Slider = styled_components_1.default.div`\n  position: relative;\n  left: 0;\n  width: 1em;\n  height: 1em;\n  font-size: 1em;\n  color: ${colors_1.colors.white};\n  background: ${colors_1.colors.error};\n  transition: left 0.2s, background 0.2s;\n  border-radius: 50%;\n`;\nconst CheckIcon = styled_components_1.default(Icon_1.default)`\n  display: block;\n`;","map":{"version":3,"sources":["../../../src/components/toggleSwitch/ToggleSwitch.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst react_1 = __importStar(require(\"react\"));\nconst styled_components_1 = __importDefault(require(\"styled-components\"));\nconst colors_1 = require(\"../../common/colors\");\nconst Icon_1 = __importDefault(require(\"../icon/Icon\"));\nconst ToggleSwitch = ({ initialChecked = false, disabled = false, scale = 1, ...props }) => {\n    const [id] = react_1.useState('toggle-switch-' + Math.floor(Math.random() * 1000));\n    return (react_1.default.createElement(react_1.default.Fragment, null,\n        react_1.default.createElement(Checkbox, Object.assign({ id: id, type: \"checkbox\", defaultChecked: initialChecked, disabled: disabled }, props)),\n        react_1.default.createElement(ToggleSwitchContainer, { htmlFor: id, scale: scale, borderScale: 3, slideWidth: 1.6 },\n            react_1.default.createElement(Slider, null,\n                react_1.default.createElement(CheckIcon, { name: \"clear\", className: \"is-not-checked\" }),\n                react_1.default.createElement(CheckIcon, { name: \"check\", className: \"is-checked\" })))));\n};\nexports.default = ToggleSwitch;\nconst Checkbox = styled_components_1.default.input `\n  display: none;\n  position: relative;\n\n  &:checked {\n    & + label > div {\n      background: ${colors_1.colors.success};\n      left: calc(100% - 1em);\n    }\n    & + label > div > .is-not-checked {\n      display: none;\n    }\n  }\n\n  &:not(:checked) {\n    & + label > div > .is-checked {\n      display: none;\n    }\n  }\n\n  &:disabled {\n    & + label {\n      background: ${colors_1.colors.grayLighten90};\n      cursor: not-allowed;\n\n      & > div {\n        background: ${colors_1.colors.grayLighten60};\n      }\n    }\n  }\n`;\nconst ToggleSwitchContainer = styled_components_1.default.label `\n  position: relative;\n  display: inline-block;\n  background: #fff;\n  font-size: ${({ scale }) => scale * 20 + 'px'};\n  width: ${({ scale, borderScale, slideWidth }) => scale * (20 + borderScale * 4) * slideWidth + 'px'};\n  height: ${({ scale, borderScale }) => scale * (20 + borderScale * 4) + 'px'};\n  padding: ${({ scale, borderScale }) => scale * borderScale * 2 + 'px'};\n  box-shadow: inset 0 0 0 ${({ scale, borderScale }) => scale * borderScale + 'px'} ${colors_1.colors.grayLighten60};\n  border-radius: ${({ scale }) => scale + 'em'};\n  box-sizing: border-box;\n  cursor: pointer;\n\n  &:focus {\n    outline: none;\n  }\n`;\nconst Slider = styled_components_1.default.div `\n  position: relative;\n  left: 0;\n  width: 1em;\n  height: 1em;\n  font-size: 1em;\n  color: ${colors_1.colors.white};\n  background: ${colors_1.colors.error};\n  transition: left 0.2s, background 0.2s;\n  border-radius: 50%;\n`;\nconst CheckIcon = styled_components_1.default(Icon_1.default) `\n  display: block;\n`;\n//# sourceMappingURL=ToggleSwitch.js.map"]},"metadata":{},"sourceType":"script"}