{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst styled_components_1 = require(\"styled-components\");\n\nconst reset_1 = __importDefault(require(\"./reset\"));\n\nconst layout_1 = require(\"./layout\");\n\nexports.GlobalStyle = styled_components_1.createGlobalStyle`\n  ${reset_1.default}\n\n  body {\n    font-family: 'Source Sans Pro', sans-serif;\n    line-height: 1.5;\n  }\n  :root {\n    --font-base-size: 1.2rem;\n    --font-min-scale: 1;\n    --font-max-scale: 1.2;\n    --font-size: calc(var(--font-base-size) * var(--font-min-scale));\n\n    --font-size-xxs: calc(var(--font-size) / (1.25 * 1.25 * 1.25));\n    --font-size-xs: calc(var(--font-size) / (1.25 * 1.25));\n    --font-size-sm: calc(var(--font-size) / 1.25);\n    --font-size-md: calc(var(--font-size));\n    --font-size-lg: calc(var(--font-size) * 1.25);\n    --font-size-xl: calc(var(--font-size) * 1.25 * 1.25);\n    --font-size-xxl: calc(var(--font-size) * 1.25 * 1.25 * 1.25);\n\n    /*\n    Borrowed from https://css-tricks.com/snippets/css/fluid-typography/:\n    font-size: calc([min-size] + ([max-size] - [min-size]) * ((100vw - [min-view-size]px) / ([max-view-size] - [min-view-size])))\n    */\n    @media ${layout_1.media.tabletAndUp} {\n      --font-size: calc(var(--font-min-scale) * (var(--font-base-size) + (1.2 * 16) * (var(--font-max-scale) - var(--font-min-scale)) * ((100vw - ${layout_1.breakPointsInPX.minTabletWidth}px) / ${layout_1.breakPointsInPX.minDesktopWidth - layout_1.breakPointsInPX.minTabletWidth})));\n    }\n    @media ${layout_1.media.desktopAndUp} {\n      --font-size: calc(var(--font-base-size) * var(--font-max-scale));\n    }\n  }\n  h1, h2, h3, h4, h5, h6 {\n    font-family: 'Source Serif Pro', sans-serif;\n  }\n  b, strong {\n    font-weight: bold;\n  }\n  code {\n    white-space: pre-wrap;\n    font-family: 'Source Code Pro', monospace;\n  }\n  samp {\n    font-family: 'Source Code Pro', monospace;\n  }\n`;","map":{"version":3,"sources":["../../src/common/global.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,MAAA,mBAAA,GAAA,OAAA,CAAA,mBAAA,CAAA;;AACA,MAAA,OAAA,GAAA,eAAA,CAAA,OAAA,CAAA,SAAA,CAAA,CAAA;;AACA,MAAA,QAAA,GAAA,OAAA,CAAA,UAAA,CAAA;;AAEa,OAAA,CAAA,WAAA,GAAc,mBAAA,CAAA,iBAAiB;IACxC,OAAA,CAAA,OAAK;;;;;;;;;;;;;;;;;;;;;;;;aAwBI,QAAA,CAAA,KAAA,CAAM,WAAW;oJAEtB,QAAA,CAAA,eAAA,CAAgB,cAClB,SAAS,QAAA,CAAA,eAAA,CAAgB,eAAhB,GAAkC,QAAA,CAAA,eAAA,CAAgB,cAAc;;aAElE,QAAA,CAAA,KAAA,CAAM,YAAY;;;;;;;;;;;;;;;;;AAiB9B,CA/CY","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst styled_components_1 = require(\"styled-components\");\nconst reset_1 = __importDefault(require(\"./reset\"));\nconst layout_1 = require(\"./layout\");\nexports.GlobalStyle = styled_components_1.createGlobalStyle `\n  ${reset_1.default}\n\n  body {\n    font-family: 'Source Sans Pro', sans-serif;\n    line-height: 1.5;\n  }\n  :root {\n    --font-base-size: 1.2rem;\n    --font-min-scale: 1;\n    --font-max-scale: 1.2;\n    --font-size: calc(var(--font-base-size) * var(--font-min-scale));\n\n    --font-size-xxs: calc(var(--font-size) / (1.25 * 1.25 * 1.25));\n    --font-size-xs: calc(var(--font-size) / (1.25 * 1.25));\n    --font-size-sm: calc(var(--font-size) / 1.25);\n    --font-size-md: calc(var(--font-size));\n    --font-size-lg: calc(var(--font-size) * 1.25);\n    --font-size-xl: calc(var(--font-size) * 1.25 * 1.25);\n    --font-size-xxl: calc(var(--font-size) * 1.25 * 1.25 * 1.25);\n\n    /*\n    Borrowed from https://css-tricks.com/snippets/css/fluid-typography/:\n    font-size: calc([min-size] + ([max-size] - [min-size]) * ((100vw - [min-view-size]px) / ([max-view-size] - [min-view-size])))\n    */\n    @media ${layout_1.media.tabletAndUp} {\n      --font-size: calc(var(--font-min-scale) * (var(--font-base-size) + (1.2 * 16) * (var(--font-max-scale) - var(--font-min-scale)) * ((100vw - ${layout_1.breakPointsInPX.minTabletWidth}px) / ${layout_1.breakPointsInPX.minDesktopWidth - layout_1.breakPointsInPX.minTabletWidth})));\n    }\n    @media ${layout_1.media.desktopAndUp} {\n      --font-size: calc(var(--font-base-size) * var(--font-max-scale));\n    }\n  }\n  h1, h2, h3, h4, h5, h6 {\n    font-family: 'Source Serif Pro', sans-serif;\n  }\n  b, strong {\n    font-weight: bold;\n  }\n  code {\n    white-space: pre-wrap;\n    font-family: 'Source Code Pro', monospace;\n  }\n  samp {\n    font-family: 'Source Code Pro', monospace;\n  }\n`;\n//# sourceMappingURL=global.js.map"]},"metadata":{},"sourceType":"script"}