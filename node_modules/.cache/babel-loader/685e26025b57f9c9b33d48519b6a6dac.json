{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useField } from 'formik';\nimport styled from 'styled-components';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CheckboxBase = ({\n  label,\n  ...props\n}) => {\n  _s();\n\n  const [isChecked, setIsChecked] = useState(false);\n  const [field, meta, helpers] = useField(props.name);\n\n  const handleChange = checked => {\n    setIsChecked(!!checked);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n\n_s(CheckboxBase, \"GTOLkGnJN46WB83jP6XhY8pPiu4=\", false, function () {\n  return [useField];\n});\n\n_c = CheckboxBase;\nconst Checkbox = styled(CheckboxBase)`\n  & + div {\n    & > i {\n      font-size: 1.2rem;\n      position: absolute; /* Required or else the checkmark looks fucked*/\n    }\n  }\n`;\nexport default Checkbox;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckboxBase\");","map":{"version":3,"sources":["/home/johan/myshit/invoiceinfo/src/components/Inputs/Checkbox.tsx"],"names":["React","useState","useField","styled","CheckboxBase","label","props","isChecked","setIsChecked","field","meta","helpers","name","handleChange","checked","Checkbox"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAA2C,OAA3C;AAEA,SAASC,QAAT,QAAyB,QAAzB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;;;AASA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAAS,KAAGC;AAAZ,CAAD,KAAwC;AAAA;;AAC3D,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACQ,KAAD,EAAQC,IAAR,EAAcC,OAAd,IAAyBT,QAAQ,CAACI,KAAK,CAACM,IAAP,CAAvC;;AAEA,QAAMC,YAAY,GAAIC,OAAD,IAAuB;AAC1CN,IAAAA,YAAY,CAAC,CAAC,CAACM,OAAH,CAAZ;AACD,GAFD;;AAIA,sBACE,qCADF;AAKD,CAbD;;GAAMV,Y;UAE2BF,Q;;;KAF3BE,Y;AAeN,MAAMW,QAAQ,GAAGZ,MAAM,CAACC,YAAD,CAAe;AACtC;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;AASA,eAAeW,QAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Checkbox as DsCheckbox } from '@dotkomonline/design-system';\nimport { useField } from 'formik';\nimport styled from 'styled-components';\n\ninterface CheckboxProps {\n  value: string;\n  name: string;\n  label: string;\n}\n\n\nconst CheckboxBase = ({ label, ...props }: CheckboxProps) => {\n  const [isChecked, setIsChecked] = useState(false);\n  const [field, meta, helpers] = useField(props.name);\n\n  const handleChange = (checked?: boolean) => {\n    setIsChecked(!!checked);\n  };\n\n  return (\n    <>\n    </>\n      \n  );\n};\n\nconst Checkbox = styled(CheckboxBase)`\n  & + div {\n    & > i {\n      font-size: 1.2rem;\n      position: absolute; /* Required or else the checkmark looks fucked*/\n    }\n  }\n`;\n\nexport default Checkbox;\n"]},"metadata":{},"sourceType":"module"}