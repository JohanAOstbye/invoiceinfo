{"ast":null,"code":"var _jsxFileName = \"/home/johan/myshit/invoiceinfo/src/components/Inputs/Checkbox.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Checkbox as DsCheckbox } from '@dotkomonline/design-system';\nimport { useField } from 'formik';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CheckboxBase = ({\n  label,\n  ...props\n}) => {\n  _s();\n\n  const [isChecked, setIsChecked] = useState(false);\n  const [field, meta, helpers] = useField(props.name);\n\n  const handleChange = checked => {\n    setIsChecked(!!checked);\n  };\n\n  return /*#__PURE__*/_jsxDEV(S.Wrapper, {\n    children: [/*#__PURE__*/_jsxDEV(DsCheckbox, { ...field,\n      label: label,\n      isChecked: isChecked,\n      ...props,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), \";\", meta.error && meta.touched && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: meta.error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 38\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CheckboxBase, \"GTOLkGnJN46WB83jP6XhY8pPiu4=\", false, function () {\n  return [useField];\n});\n\n_c = CheckboxBase;\nconst Checkbox = styled(CheckboxBase)`\n  & + div {\n    & > i {\n      font-size: 1.2rem;\n      position: absolute; /* Required or else the checkmark looks fucked*/\n    }\n  }\n`;\nexport default Checkbox;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckboxBase\");","map":{"version":3,"sources":["/home/johan/myshit/invoiceinfo/src/components/Inputs/Checkbox.tsx"],"names":["React","useState","Checkbox","DsCheckbox","useField","styled","CheckboxBase","label","props","isChecked","setIsChecked","field","meta","helpers","name","handleChange","checked","error","touched"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAA2C,OAA3C;AACA,SAASC,QAAQ,IAAIC,UAArB,QAAuC,6BAAvC;AACA,SAASC,QAAT,QAAyB,QAAzB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;;AASA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAAS,KAAGC;AAAZ,CAAD,KAAwC;AAAA;;AAC3D,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACU,KAAD,EAAQC,IAAR,EAAcC,OAAd,IAAyBT,QAAQ,CAACI,KAAK,CAACM,IAAP,CAAvC;;AAEA,QAAMC,YAAY,GAAIC,OAAD,IAAuB;AAC1CN,IAAAA,YAAY,CAAC,CAAC,CAACM,OAAH,CAAZ;AACD,GAFD;;AAIA,sBACE,QAAC,CAAD,CAAG,OAAH;AAAA,4BACE,QAAC,UAAD,OAAgBL,KAAhB;AAAuB,MAAA,KAAK,EAAEJ,KAA9B;AAAqC,MAAA,SAAS,EAAEE,SAAhD;AAAA,SAA+DD,KAA/D;AAAsE,MAAA,QAAQ,EAAEO;AAAhF;AAAA;AAAA;AAAA;AAAA,YADF,OAEGH,IAAI,CAACK,KAAL,IAAcL,IAAI,CAACM,OAAnB,iBAA8B;AAAA,gBAAMN,IAAI,CAACK;AAAX;AAAA;AAAA;AAAA;AAAA,YAFjC;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAdD;;GAAMX,Y;UAE2BF,Q;;;KAF3BE,Y;AAgBN,MAAMJ,QAAQ,GAAGG,MAAM,CAACC,YAAD,CAAe;AACtC;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;AASA,eAAeJ,QAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Checkbox as DsCheckbox } from '@dotkomonline/design-system';\nimport { useField } from 'formik';\nimport styled from 'styled-components';\n\ninterface CheckboxProps {\n  value: string;\n  name: string;\n  label: string;\n}\n\n\nconst CheckboxBase = ({ label, ...props }: CheckboxProps) => {\n  const [isChecked, setIsChecked] = useState(false);\n  const [field, meta, helpers] = useField(props.name);\n\n  const handleChange = (checked?: boolean) => {\n    setIsChecked(!!checked);\n  };\n\n  return (\n    <S.Wrapper>\n      <DsCheckbox {...field} label={label} isChecked={isChecked} {...props} onChange={handleChange} />;\n      {meta.error && meta.touched && <div>{meta.error}</div>}\n    </S.Wrapper>\n  );\n};\n\nconst Checkbox = styled(CheckboxBase)`\n  & + div {\n    & > i {\n      font-size: 1.2rem;\n      position: absolute; /* Required or else the checkmark looks fucked*/\n    }\n  }\n`;\n\nexport default Checkbox;\n"]},"metadata":{},"sourceType":"module"}