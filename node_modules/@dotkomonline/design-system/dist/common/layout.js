"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.breakPointsInPX = {
    minMobileWidth: 320,
    minTabletWidth: 756,
    minDesktopWidth: 1200,
    minWidescreenWidth: 1704,
};
exports.breakPoints = {
    minMobileWidth: exports.breakPointsInPX.minMobileWidth + 'px',
    maxMobileWidth: exports.breakPointsInPX.minTabletWidth - 1 + 'px',
    minTabletWidth: exports.breakPointsInPX.minTabletWidth + 'px',
    maxTabletWidth: exports.breakPointsInPX.minDesktopWidth - 1 + 'px',
    minDesktopWidth: exports.breakPointsInPX.minDesktopWidth + 'px',
    maxDesktopWidth: exports.breakPointsInPX.minWidescreenWidth - 1 + 'px',
    minWidescreenWidth: exports.breakPointsInPX.minWidescreenWidth + 'px',
};
exports.media = {
    mobileOnly: `screen and (max-width: ${exports.breakPoints.maxMobileWidth})`,
    tabletOnly: `screen and (min-width: ${exports.breakPoints.minTabletWidth}) and (max-width: ${exports.breakPoints.maxTabletWidth})`,
    desktopOnly: `screen and (min-width: ${exports.breakPoints.minDesktopWidth}) and (max-width: ${exports.breakPoints.maxDesktopWidth})`,
    widescreenOnly: `screen and (min-width: ${exports.breakPoints.minWidescreenWidth})`,
    tabletAndUp: `screen and (min-width: ${exports.breakPoints.minTabletWidth})`,
    desktopAndUp: `screen and (min-width: ${exports.breakPoints.minDesktopWidth})`,
    widescreenAndUp: `screen and (min-width: ${exports.breakPoints.minWidescreenWidth})`,
};
//# sourceMappingURL=layout.js.map