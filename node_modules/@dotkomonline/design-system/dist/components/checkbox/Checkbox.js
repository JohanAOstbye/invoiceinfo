"use strict";
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const react_1 = __importStar(require("react"));
const styled_components_1 = __importStar(require("styled-components"));
const colors_1 = require("../../common/colors");
const Icon_1 = __importDefault(require("../icon/Icon"));
const Checkbox = ({ label, defaultChecked = false, onChange = () => null, disabled = false, error = false, ...props }) => {
    const [checked, setChecked] = react_1.useState(defaultChecked);
    const update = () => {
        if (!disabled) {
            onChange(!checked);
            setChecked((prevState) => !prevState);
        }
    };
    return (react_1.default.createElement(CheckboxLabel, { disabled: disabled },
        react_1.default.createElement(HiddenCheckbox, Object.assign({ checked: checked, disabled: disabled, onChange: update }, props)),
        react_1.default.createElement(StyledCheckbox, { tabIndex: 0, error: error },
            react_1.default.createElement(StyledIcon, { name: "done", isChecked: checked })),
        react_1.default.createElement("span", null, label)));
};
exports.default = Checkbox;
const size = 20;
const CheckboxLabelDisabled = styled_components_1.css `
  color: ${colors_1.colors.grayLighten60};
  cursor: not-allowed;
  &:hover {
    color: ${colors_1.colors.grayLighten60};
  }
`;
const CheckboxLabel = styled_components_1.default.label `
  position: relative;
  display: inline-flex;
  align-items: center;
  padding-left: ${size + 5}px;
  padding-right: 5px;
  height: ${size}px;
  cursor: pointer;
  &:hover {
    color: ${colors_1.colors.primary};
  }
  ${({ disabled }) => disabled && CheckboxLabelDisabled};
`;
const CheckboxCommon = styled_components_1.css `
  position: absolute;
  left: 0;
  width: ${size}px;
  height: ${size}px;
`;
const HiddenCheckbox = styled_components_1.default.input.attrs({ type: 'checkbox' }) `
  ${CheckboxCommon}
  visibility: hidden;
`;
const StyledIcon = styled_components_1.default(Icon_1.default) `
  visibility: ${(props) => (props.isChecked ? 'visible' : 'hidden')};
  display: block;
`;
const StyledCheckbox = styled_components_1.default.div `
  ${CheckboxCommon}
  display: inline-block;
  border: 2px solid ${({ error }) => (error ? colors_1.colors.error : colors_1.colors.grayLighten60)};
  border-radius: 3px;
  color: ${colors_1.colors.white};
  background: #fff;
  transition: background-color 0.2s ease-in, border-color 0.2s;
  ${HiddenCheckbox}:checked + & {
    background: ${colors_1.colors.primary};
    border-color: ${colors_1.colors.primary};
  }
  ${CheckboxLabel}:hover > & {
    border-color: ${colors_1.colors.primary};
  }
  ${HiddenCheckbox}:disabled + & {
    cursor: not-allowed;
    color: ${colors_1.colors.grayLighten90};
    background-color: ${colors_1.colors.grayLighten90};
    border-color: ${colors_1.colors.grayLighten60};
  }
  ${HiddenCheckbox}:disabled:checked + & {
    color: ${colors_1.colors.grayLighten60};
    background-color: ${colors_1.colors.grayLighten90};
    border-color: ${colors_1.colors.grayLighten60};
  }
`;
//# sourceMappingURL=Checkbox.js.map