"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const react_1 = __importDefault(require("react"));
const styled_components_1 = __importDefault(require("styled-components"));
const Icon_1 = __importDefault(require("../icon/Icon"));
const Card_1 = __importDefault(require("../card/Card"));
const colors_1 = require("../../common/colors");
const layout_1 = require("../../common/layout");
const StyledCard = styled_components_1.default(Card_1.default) `
  min-width: 90vw;
  max-height: 95vh;
  overflow-y: auto;

  @media ${layout_1.media.tabletAndUp} {
    min-width: 100px;
    min-height: min-content;
    max-width: 60vw;
    max-height: 80vh;
  }
`;
const CloseBtn = styled_components_1.default.button `
  font-size: 24px;
  background-color: transparent;
  border: none;
  color: ${colors_1.colors.error};
  font-weight: bold;
  cursor: pointer;
  border-radius: 50%;
  padding: 0.5rem;
  margin: -0.5em -0.5em 0 0;

  &:hover {
    background-color: ${colors_1.colors.errorLighten90};
  }

  &:active {
    background-color: ${colors_1.colors.error};
    color: ${colors_1.colors.errorDarken35};
  }
`;
const FullscreenWrapper = styled_components_1.default.div `
  position: fixed;
  top: 0;
  left: 0;
  display: flex;
  justify-content: center;
  align-items: center;
  width: 100vw;
  height: 100vh;
  z-index: 3;
  background-color: rgba(0, 0, 0, 0.4);
`;
const TopBar = styled_components_1.default.div `
  display: flex;
  justify-content: flex-end;
`;
const Modal = ({ open = false, onClose, children }) => {
    return (react_1.default.createElement(react_1.default.Fragment, null, open && (react_1.default.createElement(FullscreenWrapper, { onClick: () => onClose() },
        react_1.default.createElement(StyledCard, { onClick: (event) => event.stopPropagation() },
            react_1.default.createElement(TopBar, null,
                react_1.default.createElement(CloseBtn, { onClick: () => onClose() },
                    react_1.default.createElement(Icon_1.default, { name: "clear" }))),
            children)))));
};
exports.default = Modal;
//# sourceMappingURL=Modal.js.map