"use strict";
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const react_1 = __importStar(require("react"));
const styled_components_1 = __importDefault(require("styled-components"));
const colors_1 = require("../../common/colors");
const statuses = {
    error: colors_1.colors.error,
    warning: colors_1.colors.warning,
    success: colors_1.colors.success,
};
const InputContainer = styled_components_1.default.div `
  display: flex;
  flex-flow: column nowrap;
  box-sizing: border-box;
`;
const StyledTextarea = styled_components_1.default.textarea `
  border: none;
  border-radius: 3px;
  padding: 0.5rem;
  padding-right: 1.5rem;
  font-size: 1em;
  color: ${colors_1.colors.black};
  border: 2px solid ${({ status }) => (status ? statuses[status] : colors_1.colors.grayLighten60)};
  transition: border-color 0.2s;
  resize: vertical;
  min-height: 4rem;

  &:focus {
    outline: none;
    border-color: ${colors_1.colors.primary};
  }

  &:disabled {
    background-color: ${colors_1.colors.grayLighten90};
    color: ${colors_1.colors.grayDarken30};
    resize: none;
  }

  &:invalid {
    border-color: ${({ status }) => (status ? statuses[status] : colors_1.colors.error)};
  }
`;
const InputLabel = styled_components_1.default.label `
  font-size: 0.8rem;
  margin-bottom: 0.5rem;
  color: ${colors_1.colors.primary};

  &:empty {
    display: none;
  }
`;
const InputMessage = styled_components_1.default.p `
  margin-top: 0.5rem;
  color: ${colors_1.colors.error};

  &:empty {
    display: none;
  }
`;
const TextArea = ({ type = 'text', label = '', errorMessage = '', ...props }) => {
    return (react_1.default.createElement(InputContainer, null,
        react_1.default.createElement(InputLabel, null, label),
        react_1.default.createElement(InputArea, Object.assign({ type: type }, props)),
        react_1.default.createElement(InputMessage, null, errorMessage)));
};
const InputArea = ({ disabled, ...props }) => {
    const [text, setText] = react_1.useState(props.defaultValue || '');
    return (react_1.default.createElement(StyledTextarea, Object.assign({ value: text, onChange: (e) => {
            setText(e.target.value);
        } }, props, { disabled: disabled })));
};
exports.default = TextArea;
//# sourceMappingURL=TextArea.js.map