"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const react_1 = __importDefault(require("react"));
const styled_components_1 = __importStar(require("styled-components"));
const colors_1 = require("../../common/colors");
const RadioButton = ({ children, checked, value, disabled, groupName, error, onChange, }) => {
    return (react_1.default.createElement(RadioLabel, { disabled: disabled },
        react_1.default.createElement(HiddenRadio, { name: groupName, disabled: disabled, onChange: onChange, value: value, checked: checked }),
        react_1.default.createElement(StyledRadio, { tabIndex: 0, error: error }),
        children));
};
const size = 20;
const RadioLabelDisabled = styled_components_1.css `
  color: ${colors_1.colors.grayLighten60};
  cursor: not-allowed;

  &:hover {
    color: ${colors_1.colors.grayLighten60};
  }
`;
const RadioLabel = styled_components_1.default.label `
  position: relative;
  display: flex;
  align-items: center;
  padding: 5px 5px 5px ${size + 10}px;
  cursor: pointer;
  transition: color 0.2s;

  &:hover {
    color: ${colors_1.colors.primary};
  }

  ${({ disabled }) => disabled && RadioLabelDisabled};
`;
const HiddenRadioCommon = styled_components_1.css `
  position: absolute;
  width: ${size}px;
  height: ${size}px;
  left: 0;
  top: 50%;
  transform: translateY(-50%);
`;
const HiddenRadio = styled_components_1.default.input.attrs({ type: 'radio' }) `
  ${HiddenRadioCommon}
  visibility: hidden;
`;
const StyledRadio = styled_components_1.default.div `
  ${HiddenRadioCommon}
  background: #fff;
  border: 2px solid ${({ error }) => (error ? colors_1.colors.error : colors_1.colors.grayLighten60)};
  border-radius: 50%;
  transition: border 0.2s;

  ${RadioLabel}:hover &,
  ${HiddenRadio}:checked + & {
    border-color: ${colors_1.colors.primary};
  }

  ${HiddenRadio}:checked + & {
    border-width: ${size / 3.5}px;
  }

  ${HiddenRadio}:disabled + & {
    cursor: not-allowed;
    background-color: ${colors_1.colors.grayLighten90};
    border-color: ${colors_1.colors.grayLighten90};
  }
`;
exports.default = RadioButton;
//# sourceMappingURL=RadioButton.js.map