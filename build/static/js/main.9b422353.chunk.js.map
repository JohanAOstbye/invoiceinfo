{"version":3,"sources":["components/layout.tsx","styles/normalize.ts","common/ValidaitonSchema.ts","components/Area.tsx","components/Form/Areas/InformationArea/index.tsx","components/Form/Areas/InformationArea/informationText.ts","components/Banner.tsx","components/Inputs/TextField.tsx","components/Form/Areas/CompanyArea.tsx","components/Form/Areas/ContactPersonArea.tsx","components/Inputs/Select.tsx","components/Form/Areas/OccationArea.tsx","components/Inputs/TextArea.tsx","components/Form/Areas/CommentsArea.tsx","components/Form/Areas/SubmitArea/SubmitStatus.tsx","components/Form/Areas/SubmitArea/index.tsx","components/Inputs/Checkbox.tsx","components/Inputs/ExtraInfo.tsx","components/Form/Areas/InvoiceArea.tsx","components/Form/index.tsx","reportWebVitals.ts","index.tsx"],"names":["StyledLayout","styled","div","Page","GlobalStyle","createGlobalStyle","Layout","children","className","Helmet","href","rel","ValidationSchema","Yup","shape","companyName","required","max","contactName","contactMail","email","phone","matches","min","orgnr","comments","notRequired","S","Title","h2","colors","grayDarken90","Section","section","media","mobileOnly","Area","title","Wrapper","grayDarken30","Details","details","InformationArea","md","Header","header","primary","Heading2","Banner","width","primaryColor","white","secondaryColor","secondary","TextField","props","name","onBlur","onChange","value","useField","field","meta","errorMessage","error","touched","undefined","status","CompanyArea","label","placeholder","ContactPersonArea","type","StyledSelect","ReactSelect","SelectTest","options","rest","Select","setValue","useState","selectedOption","setSelectedOption","option","handleChange","occations","Div","OccationArea","TextArea","DsTextArea","CommentsArea","SubmitStatus","loading","submitCount","isValid","submitted","hasError","console","log","ButtonDiv","SubmitArea","onClick","color","disabled","Checkbox","isChecked","setIsChecked","useEffect","checked","ExtraInfo","values","useFormikContext","boolname","delivery","InvoiceArea","Form","form","InterestForm","setSubmitted","setHasError","initialValues","occation","deliveryAdress","isduedate","duedate","isponumber","ponumber","onSubmit","a","fetch","method","headers","body","JSON","stringify","validationSchema","isSubmitting","setSubmitting","submitForm","errors","submit","e","preventDefault","then","Object","keys","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9b422353.chunk.js","sourcesContent":["import * as React from 'react';\nimport styled, { createGlobalStyle } from 'styled-components';\nimport { GlobalStyle as DsStyle } from '@dotkomonline/design-system';\nimport Helmet from 'react-helmet';\nimport normalize from '../styles/normalize';\n\nconst StyledLayout = styled.div`\n  display: grid;\n  grid-template-columns: 1fr min(75ch, 100%) 1fr;\n\n  & > * {\n    grid-column: 2;\n  }\n`;\n\nconst Page = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\ninterface LayoutProps {\n  className?: string;\n}\nconst GlobalStyle = createGlobalStyle`${normalize}`;\n\nconst Layout: React.FC<LayoutProps> = ({ children, className }) => (\n  <>\n    <Helmet>\n      <link\n        href=\"https://fonts.googleapis.com/css?family=Roboto+Mono:300,400,700|Montserrat:300,400,700|Material+Icons+Outlined\"\n        rel=\"stylesheet\"\n      />\n    </Helmet>\n    <GlobalStyle />\n    <DsStyle />\n    <StyledLayout className={className}>\n      <Page>{children}</Page>\n    </StyledLayout>\n  </>\n);\n\nexport default Layout;\n","export default `\n  :root {\n    --font-size-md:14px;\n  }\n  html {\n    box-sizing: border-box;\n    background-color: #f2f2f2\n  }\n\n  html, body, #___gatsby, #gatsby-focus-wrapper {\n    box-sizing: border-box;\n    font-family: Montserrat, Roboto,'Source Serif Pro',sans-serif;\n    width: 100%;\n    height: 100%;\n    margin: 0;\n  }\n\n  body{\n    font-family: 'Source Sans Pro', sans-serif;\n    line-height: 1.5;\n  }\n\n  *,\n  *::before,\n  *::after {\n    box-sizing: inherit;\n  }\n`;\n","import * as Yup from 'yup';\n\nexport const ValidationSchema = Yup.object().shape({\n  companyName: Yup.string().required('Dette feltet er påkrevd').max(250, 'Navnet er for langt'),\n  contactName: Yup.string().required('Dette feltet er påkrevd').max(150, 'Navnet er for langt'),\n  contactMail: Yup.string()\n    .required('Dette feltet er påkrevd')\n    .email('Ugyldig format på mailen')\n    .max(200, 'Mailen er for lang'),\n  phone: Yup.string()\n    .required('Dette feltet er påkrevd')\n    .matches(/([+]{0,1}[0-9\\s]+)/, 'Telefonnummer er ugyldig og bør kun inneholde tall og maks 1 \"+\"')\n    .min(8, 'Telefonnummer for kort!')\n    .max(16, 'Telefonnummeret er for langt!'),\n  orgnr: Yup.string().required('Dette feltet er påkrevd'),\n  comments: Yup.string().notRequired().max(2000, 'Prøv å skriv under 2000 tegn'),\n});\n","import React, { FC } from 'react';\nimport styled from 'styled-components';\nimport { colors, media } from '@dotkomonline/design-system';\n\ninterface AreaProps {\n  title?: string;\n}\n\nconst S = {\n  Title: styled.h2`\n    color: ${colors.grayDarken90};\n    letter-spacing: 0.5px;\n    margin-bottom: 10px;\n    font-size: 1.4rem;\n  `,\n  Section: styled.section`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    flex-grow: 1;\n    width: 100%;\n    padding: 20px 50px;\n    @media ${media.mobileOnly} {\n      padding: 10px 20px;\n    }\n  `,\n};\n\nconst Area: FC<AreaProps> = ({ title, children }) => (\n  <S.Section>\n    {title && <S.Title>{title}</S.Title>}\n    {children}\n  </S.Section>\n);\n\nexport default Area;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { colors, md } from '@dotkomonline/design-system';\nimport Area from '../../../Area';\nimport { introText } from './informationText';\n\nconst S = {\n  Wrapper: styled.div`\n    font-size: 1rem;\n    padding: 15px 0px;\n    line-height: 1.5;\n    border-width: 1px 0px;\n    border-color: ${colors.grayDarken30};\n    border-style: solid;\n  `,\n  Details: styled.details`\n    margin: 1.25rem 0;\n    summary {\n      margin-bot: 1rem;\n    }\n  `,\n};\n\nconst InformationArea = (): JSX.Element => (\n  <Area>\n    <S.Wrapper>\n      {md`${introText}`}\n      {/* <S.Details>\n          <summary>Les mer om produkter</summary>\n          {md`${productDetails}`}\n        </S.Details> */}\n    </S.Wrapper>\n  </Area>\n);\n\nexport default InformationArea;\n","export const introText = `\nDenne blanketten bør helst fylles ut av økonomiavdelingen.\nInformasjonen forsikrer at det ikke oppstår feil eller manglende informasjon ved fakturering og betaling.\n\nEventuelle spørsmål kan sendes til kontakten deres, evt til [bedkom@online.ntnu.no](mailto:bedkom@online.ntnu.no) eller\n [fagkom@online.ntnu.no](mailto:fagkom@online.ntnu.no)\n`;\n\nexport const productDetails = ` ekstra info`;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport { colors, Logo, Heading2 } from '@dotkomonline/design-system';\n\nconst S = {\n  Header: styled.header`\n    background-color: ${colors.primary};\n    width: 100%;\n    margin-bottom: 1.5rem;\n    padding: 1.5rem;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n  `,\n  Title: styled(Heading2)`\n    text-align: center;\n    color: white;\n    margin-top: 1rem;\n  `,\n};\n\nexport const Banner: React.FC = () => (\n  <>\n    <S.Header>\n      <Logo width=\"75%\" primaryColor={colors.white} secondaryColor={colors.secondary} />\n      <S.Title>Innsending av fakturainformasjon</S.Title>\n    </S.Header>\n  </>\n);\n","import { useField } from 'formik';\nimport React, { FC, ComponentProps } from 'react';\nimport { TextField as DsTextField } from '@dotkomonline/design-system';\nimport styled from 'styled-components';\n\ntype TextFieldProps = ComponentProps<typeof DsTextField>;\n\nconst S = {\n  Wrapper: styled.div`\n    display: flex;\n    justify-content: center;\n    margin-bottom: 0.7rem;\n    margin-top: 0.3rem;\n\n    & > div {\n      max-width: 500px;\n      width: 100%;\n    }\n  `,\n};\n\nconst TextField: FC<TextFieldProps> = (props) => {\n  const { name, onBlur, onChange, value } = props;\n  const [field, meta] = useField<string>({ name, onBlur, onChange, value });\n  return (\n    <S.Wrapper>\n      <DsTextField\n        errorMessage={meta.error && meta.touched ? meta.error : undefined}\n        status={meta.touched ? (meta.error ? 'error' : 'success') : undefined}\n        {...field}\n        {...props}\n      />\n    </S.Wrapper>\n  );\n};\n\nexport default TextField;\n","import React, { FC } from 'react';\nimport TextField from '../../Inputs/TextField';\nimport Area from '../../Area';\n\n// eslint-disable-next-line @typescript-eslint/ban-types\nconst CompanyArea: FC<{}> = () => (\n  <Area title=\"Bedrift\">\n    <TextField name=\"companyName\" label=\"Bedriftsnavn\" placeholder=\"Bedrift AS\" />\n  </Area>\n);\n\nexport default CompanyArea;\n","import React, { FC } from 'react';\nimport Area from '../../Area';\nimport TextField from '../../Inputs/TextField';\n\n// eslint-disable-next-line @typescript-eslint/ban-types\nconst ContactPersonArea: FC<{}> = () => (\n  <Area title=\"Kontaktperson\">\n    <TextField label=\"Navn\" name=\"contactName\" placeholder=\"Ole Nordmann\" />\n    <TextField name=\"contactMail\" type=\"email\" label=\"E-post\" placeholder=\"olenordmann@bedrift.com\" />\n    <TextField name=\"phone\" type=\"tel\" label=\"Telefonnummer\" placeholder=\"+47 404 69 418\" />\n  </Area>\n);\n\nexport default ContactPersonArea;\n","import { useField } from 'formik';\nimport React, { Dispatch, SetStateAction, useState } from 'react';\n// import { Select as DsSelect } from '@dotkomonline/design-system';\n// import styled from 'styled-components';\nimport ReactSelect from 'react-select';\nimport styled, { StyledComponentProps } from 'styled-components';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ninterface SelectPropsTest extends StyledComponentProps<'select', any, any, any> {\n  options: OptionType[];\n}\n\nconst StyledSelect = styled(ReactSelect)`\n  transition: all 0.2s;\n  padding: 8px 20px 8px 8px;\n  background: #fff;\n  border-radius: 3px;\n  border: 2px solid #ababab;\n  cursor: pointer;\n  &:hover {\n    border-color: #blue;\n  }\n  appearance: none;\n`;\n\nconst S = {\n  Wrapper: styled.div`\n    display: flex;\n    justify-content: center;\n    margin-bottom: 1.3rem;\n\n    & > div {\n      max-width: 500px;\n      width: 100%;\n    }\n  `,\n};\n\nconst SelectTest = ({ options, ...rest }: SelectPropsTest) => <StyledSelect options={options} {...rest} />;\n\nexport interface OptionType {\n  value: string;\n  label: string;\n}\n\ninterface SelectProps {\n  name: string;\n  label: string;\n  options: OptionType[];\n}\n\nconst SelectBase = ({ ...props }: SelectProps) => {\n  const [field, meta, helpers] = useField({ type: 'select', ...props });\n  const { setValue } = helpers;\n  const [selectedOption, setSelectedOption]: [\n    OptionType | undefined,\n    Dispatch<SetStateAction<OptionType | undefined>>\n  ] = useState();\n\n  const handleChange = (option: OptionType) => {\n    setSelectedOption(option);\n    setValue(option.value);\n  };\n\n  return (\n    <S.Wrapper>\n      <SelectTest\n        {...field}\n        name={props.name}\n        placeholder={props.label}\n        options={props.options}\n        value={selectedOption}\n        onChange={(option: OptionType) => handleChange(option)}\n      />\n      {meta.error && meta.touched && <div>{meta.error}</div>}\n    </S.Wrapper>\n  );\n};\n\nconst Select = styled(SelectBase)`\n  & + div {\n    & > i {\n      font-size: 1.2rem;\n      position: absolute; /* Required or else the checkmark looks fucked*/\n    }\n  }\n`;\n\nexport default Select;\n","import React, { FC } from 'react';\nimport styled from 'styled-components';\nimport Area from '../../Area';\nimport Select, { OptionType } from '../../Inputs/Select';\n\n// Bedriftsarrangement, Annonse i Offline, Stillingsutlysning, Tech Talks og IT-ekskursjonen.\nconst occations: OptionType[] = [\n  {\n    value: 'bedpres',\n    label: 'Bedriftsarrangement',\n  },\n  {\n    value: 'kurs',\n    label: 'Kurs',\n  },\n  {\n    value: 'offline',\n    label: 'Annonse i Offline',\n  },\n  {\n    value: 'online_ad',\n    label: 'Stillingsutlysning',\n  },\n  {\n    value: 'techtalks',\n    label: 'Tech Talks',\n  },\n  {\n    value: 'excursion',\n    label: 'IT-ekskursjonen',\n  },\n  {\n    value: 'other',\n    label: 'Annet',\n  },\n];\n\nconst S = {\n  Div: styled.div`\n    display: grid;\n    grid-gap: 1rem;\n    grid-template-rows: repeat(1fr);\n    max-width: 500px;\n    width: 100%;\n    margin: 0 auto;\n  `,\n};\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n// eslint-disable-next-line @typescript-eslint/ban-types\nconst OccationArea:FC<{}> = () => (\n  <Area title=\"Velg anledningen fakturaen skal sendes for\">\n    <S.Div>\n      <Select name=\"occation\" options={occations} label=\"Anledning\" />\n    </S.Div>\n  </Area>\n);\n\nexport default OccationArea;\n","import { useField } from 'formik';\nimport React, { FC, ComponentProps } from 'react';\nimport { TextArea as DsTextArea } from '@dotkomonline/design-system';\nimport styled from 'styled-components';\n\ntype TextAreaProps = ComponentProps<typeof DsTextArea>;\n\nconst S = {\n  Wrapper: styled.div`\n    display: flex;\n    justify-content: center;\n    & > div {\n      width: 100%;\n      max-width: 500px;\n    }\n  `,\n  TextArea: styled(DsTextArea)`\n    height: 100px;\n  `,\n};\n\nconst TextArea: FC<TextAreaProps> = (props) => {\n  const { name, onBlur, onChange, value } = props;\n  const [field, meta] = useField<string>({ name, onBlur, onChange, value });\n  return (\n    <S.Wrapper>\n      <S.TextArea\n        errorMessage={meta.error && meta.touched ? meta.error : undefined}\n        status={meta.touched ? (meta.error ? 'error' : 'success') : undefined}\n        {...field}\n        {...props}\n      />\n    </S.Wrapper>\n  );\n};\n\nexport default TextArea;\n","import React from 'react';\nimport Area from '../../Area';\nimport TextArea from '../../Inputs/TextArea';\n\nconst CommentsArea = (): JSX.Element => (\n  <Area title=\"Kommentarer\">\n    <TextArea\n      name=\"comments\"\n      placeholder=\"Om dere har noen ønsker utover infoen dere har fylt inn over, venligst skriv her\"\n    />\n  </Area>\n);\n\nexport default CommentsArea;\n","import { Spinner, Message } from '@dotkomonline/design-system';\nimport React, { FC } from 'react';\n\ninterface SubmitStatusProps {\n  loading: boolean;\n  submitCount: number;\n  isValid: boolean;\n  hasError: boolean;\n  submitted: boolean;\n}\n\n// TODO: sett opp validering\nconst SubmitStatus: FC<SubmitStatusProps> = ({ loading, submitCount, isValid, submitted, hasError }) => {\n  if (loading) return <Spinner />;\n  if (hasError)\n    return (\n      <Message status=\"error\">\n        Noe gikk galt under innsending av fakturainformasjonen, Venligst send en beskrivende mail\n      </Message>\n    );\n  if (submitted) return <Message status=\"success\">Fakturainformasjon har blitt sendt inn</Message>;\n  if (submitCount > 0 && !isValid)\n      console.log(`hei${submitCount} ${!isValid}`);\n      \n    return <Message status=\"error\">Venligst sjekk alle at alle feltene er gyldig</Message>;\n  return <div />;\n};\n\nexport default SubmitStatus;\n","import React, { FC } from 'react';\nimport styled from 'styled-components';\nimport { Button } from '@dotkomonline/design-system';\nimport Area from '../../../Area';\nimport SubmitStatus from './SubmitStatus';\n\ninterface SubmitAreaProps {\n  onClick: (e: React.FormEvent<HTMLFormElement>) => void;\n  loading: boolean;\n  submitted: boolean;\n  isValid: boolean;\n  hasError: boolean;\n  submitCount: number;\n}\n\nconst S = {\n  Wrapper: styled.div`\n    width: 100%;\n    max-width: 500px;\n    align-self: center;\n    display: grid;\n    grid-template-columns: 3.5fr 1.5fr;\n    gap: 2rem;\n  `,\n  ButtonDiv: styled.div`\n    display: flex;\n    justify-content: flex-end;\n    & > button {\n      height: max-content;\n    }\n  `,\n};\n\nconst SubmitArea: FC<SubmitAreaProps> = ({ onClick, ...props }) => (\n  <Area>\n    <S.Wrapper>\n      <SubmitStatus {...props} />\n      <S.ButtonDiv>\n        <Button color=\"primary\" value=\"Send inn\" onClick={onClick} disabled={props.submitted || props.loading} />\n      </S.ButtonDiv>\n    </S.Wrapper>\n  </Area>\n);\n\nexport default SubmitArea;\n","import React, { useEffect, useState } from 'react';\nimport { Checkbox as DsCheckbox } from '@dotkomonline/design-system';\nimport { useField } from 'formik';\nimport styled from 'styled-components';\n\ninterface CheckboxProps {\n  value: string;\n  name: string;\n  label: string;\n}\n\nconst CheckboxBase = ({ label, ...props }: CheckboxProps) => {\n  const [field, meta, helpers] = useField({ type: 'checkbox', ...props });\n  const { setValue } = helpers;\n  const [isChecked, setIsChecked] = useState(false);\n\n  const handleChange = (checked?: boolean) => {\n    setIsChecked(!!checked);\n  };\n\n  useEffect(() => {\n    setValue(isChecked);\n  }, [isChecked]);\n\n  return (\n    <>\n      <DsCheckbox {...field} label={label} {...props} onChange={handleChange} />\n      {meta.error && meta.touched && <div>{meta.error}</div>}\n    </>\n  );\n};\n\nconst Checkbox = styled(CheckboxBase)`\n  & + div {\n    & > i {\n      font-size: 1.2rem;\n      position: absolute; /* Required or else the checkmark looks fucked*/\n    }\n  }\n`;\n\nexport default Checkbox;\n","import { FormikProps, FormikValues, useFormikContext } from 'formik';\nimport React, { FC, useEffect } from 'react';\nimport Checkbox from './Checkbox';\nimport TextField from './TextField';\n\ninterface ExtraInfoProps {\n  name: string;\n  label: string;\n}\n\nconst ExtraInfo: FC<ExtraInfoProps> = ({ name, label }) => {\n  const { values }: FormikProps<FormikValues> = useFormikContext();\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  useEffect(() => {}, [values]);\n\n  const boolname = `is${name}`;\n  return (\n    <div>\n      <Checkbox label={`Ønsker ${label}`} name={boolname} value={boolname} />\n      {values[boolname] ? \n        <>\n          <br/>\n          <TextField name={name} placeholder={label} />\n        </>\n        : \n        null\n      }\n    </div>\n  );\n};\n\nexport default ExtraInfo;\n","import React, { FC } from 'react';\nimport { FormikProps, FormikValues, useFormikContext } from 'formik';\nimport styled from 'styled-components';\nimport TextField from '../../Inputs/TextField';\nimport Area from '../../Area';\nimport Select, { OptionType } from '../../Inputs/Select';\nimport ExtraInfo from '../../Inputs/ExtraInfo';\n\nconst delivery: OptionType[] = [\n  {\n    value: 'ehf',\n    label: 'EHF',\n  },\n  {\n    value: 'epost',\n    label: 'Epost',\n  },\n  {\n    value: 'adresse',\n    label: 'Brev',\n  },\n];\n\nconst S = {\n  Div: styled.div`\n    display: grid;\n    grid-gap: 1rem;\n    grid-template-rows: repeat(1fr);\n    max-width: 500px;\n    width: 100%;\n    margin: 0 auto;\n  `,\n};\n\n// eslint-disable-next-line @typescript-eslint/ban-types\nconst InvoiceArea: FC<{}> = () => {\n  const { values }: FormikProps<FormikValues> = useFormikContext();\n  return (\n    <Area title=\"Fakturainformasjon\">\n      <TextField name=\"orgnr\" label=\"orgnr\" placeholder=\"Organisasjonsnummer\" />\n      <Select name=\"delivery\" options={delivery} label=\"Leverings metode\" />\n      {values.delivery !== 'ehf' && values.delivery !== '' ? (\n        <TextField name=\"deliveryLocation\" label={values.delivery} placeholder={`Ønsket ${values.delivery}`} />\n      ) : null}\n      <S.Div>\n        <ExtraInfo name=\"ponumber\" label=\"PO nummer\" />\n        <ExtraInfo name=\"duedate\" label=\"spesiell forfallsdato\" />\n      </S.Div>\n    </Area>\n  );\n};\n\nexport default InvoiceArea;\n","import { Formik } from 'formik';\nimport React, { FormEvent, useState } from 'react';\nimport styled from 'styled-components';\nimport { FormData } from '../../common/FormData';\nimport { ValidationSchema } from '../../common/ValidaitonSchema';\nimport InformationArea from './Areas/InformationArea';\nimport { Banner } from '../Banner';\nimport CompanyArea from './Areas/CompanyArea';\nimport ContactPersonArea from './Areas/ContactPersonArea';\nimport OccationArea from './Areas/OccationArea';\nimport CommentsArea from './Areas/CommentsArea';\nimport SubmitArea from './Areas/SubmitArea';\nimport InvoiceArea from './Areas/InvoiceArea';\n\nconst Form = styled.form`\n  height: 100%;\n  box-shadow: 0 1px 4px rgba(0, 0, 0, 0.3), inset 0 0 40px rgba(0, 0, 0, 0.1);\n  background-color: white;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: 2rem 0;\n`;\n\nconst InterestForm = (): JSX.Element => {\n  const [submitted, setSubmitted] = useState(false);\n  const [hasError, setHasError] = useState(false);\n\n  const initialValues: FormData = {\n    companyName: '',\n    contactName: '',\n    contactMail: '',\n    phone: '',\n    occation: 'other',\n    orgnr: '',\n    delivery: '',\n    deliveryAdress: '',\n    comments: '',\n    isduedate: false,\n    duedate: '',\n    isponumber: false,\n    ponumber: '',\n  };\n  return (\n    <Formik\n      initialValues={initialValues}\n      onSubmit={async (values) => {\n        try {\n          const res = await fetch(`https://dg34nuugf4.execute-api.eu-west-1.amazonaws.com/prod/sendMail`, {\n            method: 'post',\n            headers: {\n              'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(values),\n          });\n          if (res.status === 200) setSubmitted(true);\n        } catch (err) {\n          // eslint-disable-next-line no-console\n          console.log(err);\n          setHasError(true);\n        }\n      }}\n      validationSchema={ValidationSchema}\n    >\n      {({ isSubmitting, setSubmitting, submitForm, errors, submitCount }) => {\n        const submit = async (e: FormEvent<HTMLFormElement>) => {\n          e.preventDefault();\n          await submitForm().then(() => setSubmitting(false));\n        };\n        // Checks if errors is empty. 0 will turn into true, anything else is false\n        const isValid = !Object.keys(errors).length;\n        console.log(errors)\n        return (\n          <Form>\n            <Banner />\n            <InformationArea />\n            <CompanyArea />\n            <ContactPersonArea />\n            <OccationArea />\n            <InvoiceArea />\n            <CommentsArea />\n            <SubmitArea\n              onClick={submit}\n              loading={isSubmitting}\n              submitted={submitted}\n              isValid={isValid}\n              submitCount={submitCount}\n              hasError={hasError}\n            />\n          </Form>\n        );\n      }}\n    </Formik>\n  );\n};\n\nexport default InterestForm;\n","import { ReportHandler } from 'web-vitals';\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Layout from './components/layout';\nimport InterestForm from './components/Form';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Layout>\n      <InterestForm />\n    </Layout>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}